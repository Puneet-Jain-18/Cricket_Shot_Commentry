hello
clearPushBack(clear)
clear
'clear'
install.packages("ggplot2")
clearPushBack()
X=23
y<-"Hello"
"Hello" ->45
"Hello" ->re
22%4
22%%3
5%%2
5%%3
5%%1
22%/5
22%/%5
22%7
22/7
E<<-50
h= 3:9
h
5 %in% E
50 %in% E
c=5L
c+2.4
c+=2.6
c=c+2.7
vtr=(2,4,5,6,7)
vtr=c(2,4,5,6,7)
vtr[0]
vtr= (3,5 ,56,6)
vtr= c(3,5 ,56,6)
vtr3=sort(vtr);
vtr3[5]
vtr3[2]
vtr3=sort(vtr);
vtr3[5];
vtr[-3]
arr=array(c(vtr),dim=(2,2))
arr=array(c(vtr),dim=c(2,2))
arr
arr2=array(c(vtr),dim=c(2,2,2))
arr2
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
data <- read.csv(file="pima.te.csv",head="TRUE",sep=",")
data <- read.csv(file="/Documents/Untitled1.csv",head="TRUE",sep=",")
data <- read.csv(file="/Documents/Untitled.csv",head="TRUE",sep=",")
data <- read.csv(file="Untitled.csv",head="TRUE",sep=",")
data <- read.csv(file="Untitled.csv",head="TRUE",sep=",")
data <- read.csv(file.choose(),head=TRUE,sep=",");
data
View(data)
library(catools)
library(caTools)
install.packages("caTools")
library(caTools)
source('~/.active-rstudio-document')
training
testing
model=glm(type~.,training,type="bionomial")
model
model <-glm(type~.,training,type="bionomial")
model <-glm(type~.,training,family()="bionomial")
model <-glm(type~.,training,family="bionomial")
model <-glm(type~.,training,family="binomial")
View(model)
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
summary(model)
model=glm(type~.-X-skin,training,family ="binomial");
summary(model)
model=glm(type~.-X,training,family ="binomial");
summary(model)
model=glm(type~.-X,training,family ="binomial");
summary(model)
model=glm(type~.,training,family ="binomial");
summary(model)
model=glm(type~.-age,training,family ="binomial");
summary(model)
res <- predict(model,testing,type="response");
res
table(ActualValue=testing$type,PredictedValue=res>0.5)
(45+11)/(45+4+14+11)
table(ActualValue=testing$type,PredictedValue=res>0.4)
(44+13)/(44+5+12+13)
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
table(ActualValue=testing$type,PredictedValue=res>0.5);
res <- predict(model,training,type="response");
library(ROCR)
install.packages("ROCR")
rocrPred= predection(res,training$type)
rocrPred= predect(res,training$type)
rocrPred= predict(res,training$type)
debugSource('~/Work/R programmin/dibaties.r')
rocrPref=performance(rocrPred,"tpr","fpr")
res <- predict(model,training,type="response")
library(ROCR)
rocrPred= predict(res,training$type)
rocrPred= prediction(res,training$type)
rocrPref=performance(rocrPred,"tpr","fpr")
plot(rocrPref,colorize=TRUE,priny.cutoffs.at(0.1,by=0.1))
plot(rocrPref,colorize=TRUE,print.cutoffs.at(0.1,by=0.1))
plot(rocrPref,colorize=TRUE,print.cutoffs.at=seq(0.1,by=0.1))
res <- predict(model,testing,type="response")
table(ActualValue=testing$type,PredictedValue=res>0.5);
table(ActualValue=testing$type,PredictedValue=res>0.35);
table(ActualValue=testing$type,PredictedValue=res>0.3);
(45+14)/(45+14+5+10)
(47+14)/(47+14+5+8)
debugSource('~/Work/R programmin/dibaties.r')
q
source('~/Work/R programmin/dibaties.r')
training <- subset(data, split== TRUE)
training <- subset(data, split== TRUE)
training <- subset(data, split== TRUE)
training <- subset(data, split== TRUE)
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
training <- subset(data, split== TRUE)
res <- predict(model,training,type="response")
source('~/Work/R programmin/dibaties.r')
table(ActualValue=testing$type,PredictedValue=res>0.35);
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
source('~/Work/R programmin/dibaties.r')
library(MASS)
imort
data("Boston")
View(model)
View(data)
data("Boston")
force(Boston)
View(Boston)
library(MASS)
data(Boston)
?Boston
force(Boston)
View(Boston)
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
View(training)
source('~/Work/R programmin/realEstate(Linear regression).r')
View(Boston)
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
View(rocrPred)
View(rocrPref)
source('~/Work/R programmin/dibaties(Logistic regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
source('~/Work/R programmin/realEstate(Linear regression).r')
data("iris")
force(iris)
View(iris)
dataset <- read.csv(iris,header=F)
dataset <- iris
colnames(dataset)
library(caTools)
split <- sample.split(dataset,SplitRatio = 0.8)
training <- subset(dataset, split==T)
testing <- subset(dataset,slit ==F)
library(caTools)
split <- sample.split(dataset,SplitRatio = 0.8)
training <- subset(dataset, split==T)
testing <- subset(dataset,split ==F)
dim(dataset)
sapply(dataset, class)
sapply(dataset)
sapply(dataset,max)
sapply(dataset[,0],max)
sapply(dataset[,1],max)
sapply(dataset[,2],max)
sapply(dataset[,2],class)
sapply(dataset[,2],1,class)
dataset<- dataset[,-5]
sapply(dataset,class)
sapply(dataset,max)
sapply(dataset,sum)
sapply(dataset,class)
source('~/.active-rstudio-document')
sapply(dataset,class)
head(dataset)
levels(dataset)
levels(dataset$Species)
levels(dataset$Sepal.Length)
prop.table(table(dataset$Species))*100
summary(dataset)
dataset[1,5]
dataset[1,4]
dataset[10,4]
dataset[,4]
dataset[1,4]
dataset[,1:4]
dataset[1:4,1:4]
dataset[1:4,4:5]
View(dataset)
library(neuralnet)
install.packages("neuralnet")
library(neuralnet)
source('~/.active-rstudio-document')
nn=neuralnet(Placed~. , data=df,hidden=3 , act.fct = "logistic",linear.output = F)
plot(nn)
data("iris")
force(iris)
View(iris)
nn=neuralnet(Species~. , data=iris,hidden=3 , act.fct = "logistic",linear.output = F)
plot(nn)
plot(nn)
nn=neuralnet(Species~. , data=iris,hidden=3 , act.fct = "logistic",linear.output = T)
plot(nn)
nn=neuralnet(Placed~. , data=iris,hidden=5 , act.fct = "logistic",leinear.output = T)
nn=neuralnet(Placed~. , data=iris,hidden=5 , act.fct = "logistic",linear.output = F)
nn=neuralnet(Placed~. , data=df,hidden=5 , act.fct = "logistic",linear.output = F)
plot(nn)
nn=neuralnet(Placed~. , data=df,hidden=5 , act.fct = "logistic",linear.output = T)
plot(nn)
nn=neuralnet(Placed~. , data=df,hidden=1 , act.fct = "logistic",linear.output = T)
plot(nn)
nn=neuralnet(Placed~. , data=df,hidden=0 , act.fct = "logistic",linear.output = T)
plot(nn)
nn=neuralnet(Placed~. , data=df,hidden=5 , act.fct = "logistic",linear.output = T)
plot(nn)
TKS=c(30,40,50)
CSS=c(85,50,40)
test=data.frame(TKS,CSS)
predict=compute(nn,test)
predict$net.result
pred <- ifelse(prob>0.5,1,0)
prob <- predict$net.result
pred <- ifelse(prob>0.5,1,0)
pred
source('~/Work/R-ML/NeuralNet/basic NN.R')
source('~/Work/R-ML/NeuralNet/basic NN.R')
data <- read.csv("./datafiles/shot.csv",head=TRUE,sep=",");
clear
setwd("/home/puneet/Work/R-ML")
source('~/Work/R-ML/heart dieases(SVM).R')
library(caret)
heart <- read.csv("./datafiles/shot.csv",sep=",",header = F)
library(caret)
heart <- read.csv("./datafiles/shot.csv",sep=",",header = F)
library(caTools)
heart <- na.omit(heart)
split <- sample.split(heart,SplitRatio = 0.8)
training <- subset(heart, split ==T)
training <- na.omit(training)
testing <- subset(heart ,split==F)
testing <- na.omit(testing)
anyNA(heart)
heart <- na.omit(heart)
split <- sample.split(heart,SplitRatio = 0.8)
training <- subset(heart, split ==T)
training <- na.omit(training)
testing <- subset(heart ,split==F)
summary(heart)
heart <- read.csv("./datafiles/shot.csv",sep=",",header = T)
library(caTools)
anyNA(heart)
heart <- na.omit(heart)
split <- sample.split(heart,SplitRatio = 0.8)
training <- subset(heart, split ==T)
training <- na.omit(training)
testing <- subset(heart ,split==F)
summary(heart)
trctrl= trainControl(method = "repeatedcv", number = 10,repeats = 3 )
svmLinear <- train(shotType ~. , data =heart,
method = "svmLinear",
trControl = trctrl,
preProcess= c("center","scale"),tuneLength=10)
summary(svmLinear)
svmLinear
pred <- predict(svmLinear,newdata = testing )
print(confusionMatrix(table(pred,testing$V15)))
print(confusionMatrix(table(pred,testing$V53)))
head(heart)
print(confusionMatrix(table(pred,testing$shotType)))
source('~/.active-rstudio-document')
library(caret)
library(e1071)
data <- read.csv("./datafiles/shot.csv",sep=",",header = T)
library(caTools)
anyNA(heart)
data <- na.omit(heart)
split <- sample.split(heart,SplitRatio = 0.8)
training <- subset(heart, split ==T)
testing <- subset(heart ,split==F)
summary(heart)
svm1 <- svm(shotType~. , data= training,
method="C-classification",kernal="radial",
gamma=0.1,cost=10)
summary(svm1)
svm1$SV
pred <- predict(svm1,newdata = testing )
pred
print(confusionMatrix(table(pred,testing$shotType)))
source('~/Work/Minor/SVM/svm multiclass tuned.R')
setwd("./../../Minor")
setwd("/home/puneet/Work/Minor")
source('~/Work/Minor/SVM/svm multiclass tuned.R')
source('~/Work/Minor/SVM/svm multiclass tuned.R')
library(caret)
library(e1071)
data <- read.csv("./shot.csv",sep=",",header = T)
library(caTools)
split <- sample.split(data,SplitRatio = 0.8)
training <- subset(data, split ==T)
testing <- subset(data ,split==F)
svm1 <- svm(shotType~. , data= training,
method="C-classification",kernal="radial",
gamma=0.1,cost=10)
summary(svm1)
plot(svm1,training,rightAnkle.x ~leftAnkle.x,
slice)
pred <- predict(svm1,newdata = testing )
print(confusionMatrix(table(pred,testing$shotType)))
source('~/Work/Minor/SVM/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
source('~/Work/R-ML/svm multiclass tuned.R')
